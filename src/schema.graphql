type Query {
    status: String!
    live: [Live!]!
    history: [Data]
}
type Mutation {
    signup(email:String!, password:String!, name:String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
}
type AuthPayload {
    token: String
    user: User
}
type User {
    id: ID!
    name: String!
    email: String!
}
type Live {
    address: String!
    data: Float!
}
scalar Date
type Data {
    id: ID!
    loggedAt: String!
    data: Float!
}